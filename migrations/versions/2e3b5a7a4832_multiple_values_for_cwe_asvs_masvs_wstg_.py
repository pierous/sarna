"""Multiple values for CWE, ASVS, MASVS, WSTG, MSTG

Revision ID: 2e3b5a7a4832
Revises: 13dc47d116fc
Create Date: 2020-11-04 17:28:12.020124

"""
from alembic import op
import sqlalchemy as sa
import sarna


# revision identifiers, used by Alembic.
revision = '2e3b5a7a4832'
down_revision = '13dc47d116fc'
branch_labels = None
depends_on = None


def upgrade():
# ### commands auto generated by Alembic - please adjust! ###
    op.create_table('finding_template_cwe',
    sa.Column('finding_template_id', sa.Integer(), nullable=False),
    sa.Column('cwe_ref', sarna.model.sql_types.enum.Enum(sarna.model.enums.category.CWE), nullable=False),
    sa.ForeignKeyConstraint(['finding_template_id'], ['finding_template.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('finding_template_id', 'cwe_ref')
    )
    op.create_table('finding_template_mobile_requirement',
    sa.Column('finding_template_id', sa.Integer(), nullable=False),
    sa.Column('masvs_req', sarna.model.sql_types.enum.Enum(sarna.model.enums.category.MASVS), nullable=False),
    sa.ForeignKeyConstraint(['finding_template_id'], ['finding_template.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('finding_template_id', 'masvs_req')
    )
    op.create_table('finding_template_mobile_test',
    sa.Column('finding_template_id', sa.Integer(), nullable=False),
    sa.Column('mstg_ref', sarna.model.sql_types.enum.Enum(sarna.model.enums.category.MSTG), nullable=False),
    sa.ForeignKeyConstraint(['finding_template_id'], ['finding_template.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('finding_template_id', 'mstg_ref')
    )
    op.create_table('finding_template_web_requirement',
    sa.Column('finding_template_id', sa.Integer(), nullable=False),
    sa.Column('asvs_req', sarna.model.sql_types.enum.Enum(sarna.model.enums.category.ASVS), nullable=False),
    sa.ForeignKeyConstraint(['finding_template_id'], ['finding_template.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('finding_template_id', 'asvs_req')
    )
    op.create_table('finding_template_web_test',
    sa.Column('finding_template_id', sa.Integer(), nullable=False),
    sa.Column('wstg_ref', sarna.model.sql_types.enum.Enum(sarna.model.enums.category.WSTG), nullable=False),
    sa.ForeignKeyConstraint(['finding_template_id'], ['finding_template.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('finding_template_id', 'wstg_ref')
    )
    op.create_table('finding_cwe',
    sa.Column('finding_id', sa.Integer(), nullable=False),
    sa.Column('cwe_ref', sarna.model.sql_types.enum.Enum(sarna.model.enums.category.CWE), nullable=False),
    sa.ForeignKeyConstraint(['finding_id'], ['finding.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('finding_id', 'cwe_ref')
    )
    op.create_table('finding_mobile_requirement',
    sa.Column('finding_id', sa.Integer(), nullable=False),
    sa.Column('masvs_req', sarna.model.sql_types.enum.Enum(sarna.model.enums.category.MASVS), nullable=False),
    sa.ForeignKeyConstraint(['finding_id'], ['finding.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('finding_id', 'masvs_req')
    )
    op.create_table('finding_mobile_test',
    sa.Column('finding_id', sa.Integer(), nullable=False),
    sa.Column('mstg_ref', sarna.model.sql_types.enum.Enum(sarna.model.enums.category.MSTG), nullable=False),
    sa.ForeignKeyConstraint(['finding_id'], ['finding.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('finding_id', 'mstg_ref')
    )
    op.create_table('finding_web_requirement',
    sa.Column('finding_id', sa.Integer(), nullable=False),
    sa.Column('asvs_req', sarna.model.sql_types.enum.Enum(sarna.model.enums.category.ASVS), nullable=False),
    sa.ForeignKeyConstraint(['finding_id'], ['finding.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('finding_id', 'asvs_req')
    )
    op.create_table('finding_web_test',
    sa.Column('finding_id', sa.Integer(), nullable=False),
    sa.Column('wstg_ref', sarna.model.sql_types.enum.Enum(sarna.model.enums.category.WSTG), nullable=False),
    sa.ForeignKeyConstraint(['finding_id'], ['finding.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('finding_id', 'wstg_ref')
    )
    op.drop_column('finding', 'asvs')
    op.drop_column('finding', 'masvs')
    op.drop_column('finding', 'owasp_mobile_category')
    op.drop_column('finding', 'owasp_category')
    op.drop_column('finding', 'cwe')
    op.drop_column('finding_template', 'asvs')
    op.drop_column('finding_template', 'masvs')
    op.drop_column('finding_template', 'owasp_mobile_category')
    op.drop_column('finding_template', 'owasp_category')
    op.drop_column('finding_template', 'cwe')
    # ### end Alembic commands ###


def downgrade():
# ### commands auto generated by Alembic - please adjust! ###
    op.add_column('finding_template', sa.Column('cwe', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('finding_template', sa.Column('owasp_category', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('finding_template', sa.Column('owasp_mobile_category', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('finding_template', sa.Column('masvs', sa.VARCHAR(length=8), autoincrement=False, nullable=True))
    op.add_column('finding_template', sa.Column('asvs', sa.VARCHAR(length=8), autoincrement=False, nullable=True))
    op.add_column('finding', sa.Column('cwe', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('finding', sa.Column('owasp_category', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('finding', sa.Column('owasp_mobile_category', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('finding', sa.Column('masvs', sa.VARCHAR(length=8), autoincrement=False, nullable=True))
    op.add_column('finding', sa.Column('asvs', sa.VARCHAR(length=8), autoincrement=False, nullable=True))
    op.drop_table('finding_web_test')
    op.drop_table('finding_web_requirement')
    op.drop_table('finding_mobile_test')
    op.drop_table('finding_mobile_requirement')
    op.drop_table('finding_cwe')
    op.drop_table('finding_template_web_test')
    op.drop_table('finding_template_web_requirement')
    op.drop_table('finding_template_mobile_test')
    op.drop_table('finding_template_mobile_requirement')
    op.drop_table('finding_template_cwe')
    # ### end Alembic commands ###
